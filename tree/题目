1、Given a binary tree, find its minimum depth.The minimum depth is the number of nodes along
the shortest path from the root node down to the nearest leaf node.

2、Given a binary tree, return the postorder traversal of its nodes' values.
  For example:
  Given binary tree{1,#,2,3},
     1
      \
       2
      /
     3

  return[3,2,1].

  3、Given a binary tree containing digits from0-9only, each root-to-leaf path could represent a number.
    An example is the root-to-leaf path1->2->3which represents the number123.
    Find the total sum of all root-to-leaf numbers.

   4、Given a binary tree, find the maximum path sum.
     The path may start and end at any node in the tree.
     For example:
     Given the below binary tree,
            1
           / \
          2   3

     Return6.
5、Follow up for problem "Populating Next Right Pointers in Each Node".
  What if the given tree could be any binary tree? Would your previous solution still work?
  Note:
  You may only use constant extra space.

  For example,
  Given the following binary tree,
           1
         /  \
        2    3
       / \    \
      4   5    7

  After calling your function, the tree should look like:
           1 -> NULL
         /  \
        2 -> 3 -> NULL
       / \    \
      4-> 5 -> 7 -> NULL